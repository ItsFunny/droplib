// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package protos

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StreamFlag int32

const (
	StreamFlag_UNKNOWN StreamFlag = 0
	// 立即close
	StreamFlag_CLOSE_IMMEDIATELY StreamFlag = 1
	StreamFlag_KEEP_IN_TOUCH     StreamFlag = 2
	// 需要回复数据
	StreamFlag_RESPONSE              StreamFlag = 4
	StreamFlag_RESPONSE_AND_CLOSE    StreamFlag = 5
	StreamFlag_RESPONSE_AND_IN_TOUCH StreamFlag = 10
)

var StreamFlag_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "CLOSE_IMMEDIATELY",
	2:  "KEEP_IN_TOUCH",
	4:  "RESPONSE",
	5:  "RESPONSE_AND_CLOSE",
	10: "RESPONSE_AND_IN_TOUCH",
}

var StreamFlag_value = map[string]int32{
	"UNKNOWN":               0,
	"CLOSE_IMMEDIATELY":     1,
	"KEEP_IN_TOUCH":         2,
	"RESPONSE":              4,
	"RESPONSE_AND_CLOSE":    5,
	"RESPONSE_AND_IN_TOUCH": 10,
}

func (x StreamFlag) String() string {
	return proto.EnumName(StreamFlag_name, int32(x))
}

func (StreamFlag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

type BroadcastMessageProtoWrapper struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BroadcastMessageProtoWrapper) Reset()         { *m = BroadcastMessageProtoWrapper{} }
func (m *BroadcastMessageProtoWrapper) String() string { return proto.CompactTextString(m) }
func (*BroadcastMessageProtoWrapper) ProtoMessage()    {}
func (*BroadcastMessageProtoWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *BroadcastMessageProtoWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadcastMessageProtoWrapper.Unmarshal(m, b)
}
func (m *BroadcastMessageProtoWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadcastMessageProtoWrapper.Marshal(b, m, deterministic)
}
func (m *BroadcastMessageProtoWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadcastMessageProtoWrapper.Merge(m, src)
}
func (m *BroadcastMessageProtoWrapper) XXX_Size() int {
	return xxx_messageInfo_BroadcastMessageProtoWrapper.Size(m)
}
func (m *BroadcastMessageProtoWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadcastMessageProtoWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_BroadcastMessageProtoWrapper proto.InternalMessageInfo

type StreamDataMessageWrapper struct {
	ChannelID            uint32     `protobuf:"varint,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	StreamFlag           StreamFlag `protobuf:"varint,2,opt,name=streamFlag,proto3,enum=protocols.p2p.StreamFlag" json:"streamFlag,omitempty"`
	Envelope             []byte     `protobuf:"bytes,3,opt,name=envelope,proto3" json:"envelope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StreamDataMessageWrapper) Reset()         { *m = StreamDataMessageWrapper{} }
func (m *StreamDataMessageWrapper) String() string { return proto.CompactTextString(m) }
func (*StreamDataMessageWrapper) ProtoMessage()    {}
func (*StreamDataMessageWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *StreamDataMessageWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDataMessageWrapper.Unmarshal(m, b)
}
func (m *StreamDataMessageWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDataMessageWrapper.Marshal(b, m, deterministic)
}
func (m *StreamDataMessageWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDataMessageWrapper.Merge(m, src)
}
func (m *StreamDataMessageWrapper) XXX_Size() int {
	return xxx_messageInfo_StreamDataMessageWrapper.Size(m)
}
func (m *StreamDataMessageWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDataMessageWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDataMessageWrapper proto.InternalMessageInfo

func (m *StreamDataMessageWrapper) GetChannelID() uint32 {
	if m != nil {
		return m.ChannelID
	}
	return 0
}

func (m *StreamDataMessageWrapper) GetStreamFlag() StreamFlag {
	if m != nil {
		return m.StreamFlag
	}
	return StreamFlag_UNKNOWN
}

func (m *StreamDataMessageWrapper) GetEnvelope() []byte {
	if m != nil {
		return m.Envelope
	}
	return nil
}

type StreamEnvelopeProto struct {
	ChannelID            uint32     `protobuf:"varint,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	StreamFlag           StreamFlag `protobuf:"varint,2,opt,name=streamFlag,proto3,enum=protocols.p2p.StreamFlag" json:"streamFlag,omitempty"`
	Envelope             []byte     `protobuf:"bytes,3,opt,name=envelope,proto3" json:"envelope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StreamEnvelopeProto) Reset()         { *m = StreamEnvelopeProto{} }
func (m *StreamEnvelopeProto) String() string { return proto.CompactTextString(m) }
func (*StreamEnvelopeProto) ProtoMessage()    {}
func (*StreamEnvelopeProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

func (m *StreamEnvelopeProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEnvelopeProto.Unmarshal(m, b)
}
func (m *StreamEnvelopeProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEnvelopeProto.Marshal(b, m, deterministic)
}
func (m *StreamEnvelopeProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEnvelopeProto.Merge(m, src)
}
func (m *StreamEnvelopeProto) XXX_Size() int {
	return xxx_messageInfo_StreamEnvelopeProto.Size(m)
}
func (m *StreamEnvelopeProto) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEnvelopeProto.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEnvelopeProto proto.InternalMessageInfo

func (m *StreamEnvelopeProto) GetChannelID() uint32 {
	if m != nil {
		return m.ChannelID
	}
	return 0
}

func (m *StreamEnvelopeProto) GetStreamFlag() StreamFlag {
	if m != nil {
		return m.StreamFlag
	}
	return StreamFlag_UNKNOWN
}

func (m *StreamEnvelopeProto) GetEnvelope() []byte {
	if m != nil {
		return m.Envelope
	}
	return nil
}

type EnvelopeProto struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnvelopeProto) Reset()         { *m = EnvelopeProto{} }
func (m *EnvelopeProto) String() string { return proto.CompactTextString(m) }
func (*EnvelopeProto) ProtoMessage()    {}
func (*EnvelopeProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{3}
}

func (m *EnvelopeProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvelopeProto.Unmarshal(m, b)
}
func (m *EnvelopeProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvelopeProto.Marshal(b, m, deterministic)
}
func (m *EnvelopeProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvelopeProto.Merge(m, src)
}
func (m *EnvelopeProto) XXX_Size() int {
	return xxx_messageInfo_EnvelopeProto.Size(m)
}
func (m *EnvelopeProto) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvelopeProto.DiscardUnknown(m)
}

var xxx_messageInfo_EnvelopeProto proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("protocols.p2p.StreamFlag", StreamFlag_name, StreamFlag_value)
	proto.RegisterType((*BroadcastMessageProtoWrapper)(nil), "protocols.p2p.BroadcastMessageProtoWrapper")
	proto.RegisterType((*StreamDataMessageWrapper)(nil), "protocols.p2p.StreamDataMessageWrapper")
	proto.RegisterType((*StreamEnvelopeProto)(nil), "protocols.p2p.StreamEnvelopeProto")
	proto.RegisterType((*EnvelopeProto)(nil), "protocols.p2p.EnvelopeProto")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x91, 0xcd, 0x6e, 0xd3, 0x40,
	0x14, 0x85, 0x3b, 0xe1, 0x2f, 0x5c, 0x30, 0xb8, 0x03, 0x45, 0xee, 0xa8, 0x0a, 0xa3, 0x88, 0x45,
	0x84, 0xc0, 0x96, 0x0a, 0x08, 0xb1, 0x6c, 0x93, 0x41, 0x44, 0x6d, 0x9c, 0x28, 0x6e, 0x55, 0xc1,
	0xc6, 0x9a, 0x38, 0x83, 0x6d, 0x61, 0x7b, 0x46, 0x63, 0x17, 0x89, 0x37, 0x40, 0x66, 0xc1, 0x13,
	0x78, 0x05, 0x0b, 0x1e, 0x13, 0xd5, 0x4e, 0x53, 0x2c, 0xb2, 0xef, 0xea, 0xfa, 0x9e, 0xf3, 0x1d,
	0xdf, 0x23, 0x0d, 0x18, 0xa9, 0xc8, 0x73, 0x1e, 0x0a, 0x5b, 0x69, 0x59, 0x48, 0x6c, 0xd4, 0x23,
	0x90, 0x49, 0x6e, 0xab, 0x7d, 0x45, 0x1e, 0x87, 0x32, 0x94, 0xb5, 0xe4, 0x5c, 0x7c, 0x35, 0x50,
	0xbf, 0x07, 0x7b, 0x87, 0x5a, 0xf2, 0x65, 0xc0, 0xf3, 0x62, 0xd2, 0xc4, 0x67, 0x17, 0xc6, 0x99,
	0xe6, 0x4a, 0x09, 0xdd, 0xff, 0x89, 0xc0, 0xf2, 0x0a, 0x2d, 0x78, 0x3a, 0xe2, 0x05, 0x5f, 0x11,
	0x2b, 0x13, 0xef, 0xc1, 0xdd, 0x61, 0xc4, 0xb3, 0x4c, 0x24, 0xe3, 0x91, 0x85, 0x28, 0x1a, 0x18,
	0xf3, 0x2b, 0x01, 0xbf, 0x03, 0xc8, 0xeb, 0xe4, 0xfb, 0x84, 0x87, 0x56, 0x87, 0xa2, 0xc1, 0x83,
	0xfd, 0x5d, 0xbb, 0x55, 0xca, 0xf6, 0xd6, 0xc0, 0xfc, 0x1f, 0x18, 0x13, 0xe8, 0x8a, 0xec, 0xab,
	0x48, 0xa4, 0x12, 0xd6, 0x0d, 0x8a, 0x06, 0xf7, 0xe7, 0xeb, 0xbd, 0x5f, 0x22, 0x78, 0xd4, 0xc4,
	0xd8, 0x4a, 0xaa, 0x0b, 0x5f, 0x4f, 0x99, 0x87, 0x60, 0xb4, 0x5a, 0x3c, 0xff, 0xd1, 0x01, 0xb8,
	0xfa, 0x0f, 0xb6, 0xe0, 0xce, 0xa9, 0x7b, 0xe4, 0x4e, 0xcf, 0x5c, 0x73, 0x8b, 0xdc, 0x2b, 0x2b,
	0x7a, 0xb9, 0xe2, 0x17, 0xb0, 0x3d, 0x3c, 0x9e, 0x7a, 0xcc, 0x1f, 0x4f, 0x26, 0x6c, 0x34, 0x3e,
	0x38, 0x61, 0xc7, 0x1f, 0x4d, 0x44, 0x76, 0xca, 0x8a, 0xfe, 0x6f, 0xe0, 0x67, 0x60, 0x1c, 0x31,
	0x36, 0xf3, 0xc7, 0xae, 0x7f, 0x32, 0x3d, 0x1d, 0x7e, 0x30, 0x3b, 0x64, 0xbb, 0xac, 0x68, 0x5b,
	0xc4, 0x4f, 0xa1, 0x3b, 0x67, 0xde, 0x6c, 0xea, 0x7a, 0xcc, 0xbc, 0xd9, 0x00, 0x5f, 0x84, 0x50,
	0x7e, 0x9c, 0xf9, 0x85, 0x3c, 0x0f, 0x22, 0x6c, 0x03, 0xbe, 0x04, 0xfc, 0x03, 0x77, 0xe4, 0xd7,
	0x87, 0xcc, 0x5b, 0xe4, 0x49, 0x59, 0xd1, 0x0d, 0x0e, 0x7e, 0x0d, 0x3b, 0x2d, 0x75, 0x7d, 0x1e,
	0xc8, 0x6e, 0x59, 0xd1, 0xcd, 0x26, 0xe9, 0x7e, 0xff, 0xd5, 0xdb, 0xfa, 0xf3, 0xbb, 0x87, 0x0e,
	0xdf, 0x7e, 0x7a, 0x13, 0xc6, 0x45, 0x74, 0xbe, 0xb0, 0x03, 0x99, 0x3a, 0xd1, 0x37, 0x25, 0x74,
	0x22, 0x96, 0xa1, 0xd0, 0xce, 0x67, 0xbe, 0xd0, 0x71, 0xf0, 0x72, 0xa9, 0xa5, 0x4a, 0xe2, 0x85,
	0x53, 0x08, 0x9d, 0xc6, 0x19, 0x4f, 0x9c, 0xfa, 0x45, 0xf2, 0xc5, 0xed, 0x7a, 0xbe, 0xfa, 0x1b,
	0x00, 0x00, 0xff, 0xff, 0xfb, 0x9a, 0x14, 0xf1, 0xd3, 0x02, 0x00, 0x00,
}
