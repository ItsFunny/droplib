// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	bits "github.com/hyperledger/fabric-droplib/protos/libs/bits"
	crypto "github.com/hyperledger/fabric-droplib/protos/protobufs/crypto"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SignedMsgType int32

const (
	SignedMsgType_SIGNED_MSG_TYPE_UNKNOWN SignedMsgType = 0
	// Votes
	SignedMsgType_SIGNED_MSG_TYPE_PREVOTE   SignedMsgType = 1
	SignedMsgType_SIGNED_MSG_TYPE_PRECOMMIT SignedMsgType = 2
	// Proposals
	SignedMsgType_SIGNED_MSG_TYPE_PROPOSAL SignedMsgType = 32
)

var SignedMsgType_name = map[int32]string{
	0:  "SIGNED_MSG_TYPE_UNKNOWN",
	1:  "SIGNED_MSG_TYPE_PREVOTE",
	2:  "SIGNED_MSG_TYPE_PRECOMMIT",
	32: "SIGNED_MSG_TYPE_PROPOSAL",
}

var SignedMsgType_value = map[string]int32{
	"SIGNED_MSG_TYPE_UNKNOWN":   0,
	"SIGNED_MSG_TYPE_PREVOTE":   1,
	"SIGNED_MSG_TYPE_PRECOMMIT": 2,
	"SIGNED_MSG_TYPE_PROPOSAL":  32,
}

func (x SignedMsgType) String() string {
	return proto.EnumName(SignedMsgType_name, int32(x))
}

func (SignedMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}

// BlockIdFlag indicates which BlcokID the signature is for
type BlockIDFlagProto int32

const (
	BlockIDFlagProto_BLOCK_ID_FLAG_UNKNOWN BlockIDFlagProto = 0
	BlockIDFlagProto_BLOCK_ID_FLAG_ABSENT  BlockIDFlagProto = 1
	BlockIDFlagProto_BLOCK_ID_FLAG_COMMIT  BlockIDFlagProto = 2
	BlockIDFlagProto_BLOCK_ID_FLAG_NIL     BlockIDFlagProto = 3
)

var BlockIDFlagProto_name = map[int32]string{
	0: "BLOCK_ID_FLAG_UNKNOWN",
	1: "BLOCK_ID_FLAG_ABSENT",
	2: "BLOCK_ID_FLAG_COMMIT",
	3: "BLOCK_ID_FLAG_NIL",
}

var BlockIDFlagProto_value = map[string]int32{
	"BLOCK_ID_FLAG_UNKNOWN": 0,
	"BLOCK_ID_FLAG_ABSENT":  1,
	"BLOCK_ID_FLAG_COMMIT":  2,
	"BLOCK_ID_FLAG_NIL":     3,
}

func (x BlockIDFlagProto) String() string {
	return proto.EnumName(BlockIDFlagProto_name, int32(x))
}

func (BlockIDFlagProto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}

// PartsetHeader
type PartSetHeaderProto struct {
	Total                uint32   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Hash                 []byte   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartSetHeaderProto) Reset()         { *m = PartSetHeaderProto{} }
func (m *PartSetHeaderProto) String() string { return proto.CompactTextString(m) }
func (*PartSetHeaderProto) ProtoMessage()    {}
func (*PartSetHeaderProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}

func (m *PartSetHeaderProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartSetHeaderProto.Unmarshal(m, b)
}
func (m *PartSetHeaderProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartSetHeaderProto.Marshal(b, m, deterministic)
}
func (m *PartSetHeaderProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartSetHeaderProto.Merge(m, src)
}
func (m *PartSetHeaderProto) XXX_Size() int {
	return xxx_messageInfo_PartSetHeaderProto.Size(m)
}
func (m *PartSetHeaderProto) XXX_DiscardUnknown() {
	xxx_messageInfo_PartSetHeaderProto.DiscardUnknown(m)
}

var xxx_messageInfo_PartSetHeaderProto proto.InternalMessageInfo

func (m *PartSetHeaderProto) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PartSetHeaderProto) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type PartProto struct {
	Index                uint32             `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Bytes                []byte             `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Proof                *crypto.ProofProto `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PartProto) Reset()         { *m = PartProto{} }
func (m *PartProto) String() string { return proto.CompactTextString(m) }
func (*PartProto) ProtoMessage()    {}
func (*PartProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}

func (m *PartProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartProto.Unmarshal(m, b)
}
func (m *PartProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartProto.Marshal(b, m, deterministic)
}
func (m *PartProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartProto.Merge(m, src)
}
func (m *PartProto) XXX_Size() int {
	return xxx_messageInfo_PartProto.Size(m)
}
func (m *PartProto) XXX_DiscardUnknown() {
	xxx_messageInfo_PartProto.DiscardUnknown(m)
}

var xxx_messageInfo_PartProto proto.InternalMessageInfo

func (m *PartProto) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *PartProto) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func (m *PartProto) GetProof() *crypto.ProofProto {
	if m != nil {
		return m.Proof
	}
	return nil
}

// BlockID
type BlockIDProto struct {
	Hash                 []byte              `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PartSetHeader        *PartSetHeaderProto `protobuf:"bytes,2,opt,name=part_set_header,json=partSetHeader,proto3" json:"part_set_header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BlockIDProto) Reset()         { *m = BlockIDProto{} }
func (m *BlockIDProto) String() string { return proto.CompactTextString(m) }
func (*BlockIDProto) ProtoMessage()    {}
func (*BlockIDProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{2}
}

func (m *BlockIDProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockIDProto.Unmarshal(m, b)
}
func (m *BlockIDProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockIDProto.Marshal(b, m, deterministic)
}
func (m *BlockIDProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockIDProto.Merge(m, src)
}
func (m *BlockIDProto) XXX_Size() int {
	return xxx_messageInfo_BlockIDProto.Size(m)
}
func (m *BlockIDProto) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockIDProto.DiscardUnknown(m)
}

var xxx_messageInfo_BlockIDProto proto.InternalMessageInfo

func (m *BlockIDProto) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *BlockIDProto) GetPartSetHeader() *PartSetHeaderProto {
	if m != nil {
		return m.PartSetHeader
	}
	return nil
}

// Vote represents a prevote, precommit, or commit vote from validators for
// consensus.
type VoteProto struct {
	Type                 SignedMsgType          `protobuf:"varint,1,opt,name=type,proto3,enum=tendermint.types.SignedMsgType" json:"type,omitempty"`
	Height               int64                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Round                int32                  `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	BlockId              *BlockIDProto          `protobuf:"bytes,4,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ValidatorAddress     []byte                 `protobuf:"bytes,6,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	ValidatorIndex       int32                  `protobuf:"varint,7,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty"`
	Signature            []byte                 `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *VoteProto) Reset()         { *m = VoteProto{} }
func (m *VoteProto) String() string { return proto.CompactTextString(m) }
func (*VoteProto) ProtoMessage()    {}
func (*VoteProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{3}
}

func (m *VoteProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteProto.Unmarshal(m, b)
}
func (m *VoteProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteProto.Marshal(b, m, deterministic)
}
func (m *VoteProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteProto.Merge(m, src)
}
func (m *VoteProto) XXX_Size() int {
	return xxx_messageInfo_VoteProto.Size(m)
}
func (m *VoteProto) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteProto.DiscardUnknown(m)
}

var xxx_messageInfo_VoteProto proto.InternalMessageInfo

func (m *VoteProto) GetType() SignedMsgType {
	if m != nil {
		return m.Type
	}
	return SignedMsgType_SIGNED_MSG_TYPE_UNKNOWN
}

func (m *VoteProto) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *VoteProto) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *VoteProto) GetBlockId() *BlockIDProto {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *VoteProto) GetTimestamp() *timestamppb.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *VoteProto) GetValidatorAddress() []byte {
	if m != nil {
		return m.ValidatorAddress
	}
	return nil
}

func (m *VoteProto) GetValidatorIndex() int32 {
	if m != nil {
		return m.ValidatorIndex
	}
	return 0
}

func (m *VoteProto) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type NewValidBlockProto struct {
	Height               int64               `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round                int32               `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	BlockPartSetHeader   *PartSetHeaderProto `protobuf:"bytes,3,opt,name=block_part_set_header,json=blockPartSetHeader,proto3" json:"block_part_set_header,omitempty"`
	BlockParts           *bits.BitArrayProto `protobuf:"bytes,4,opt,name=block_parts,json=blockParts,proto3" json:"block_parts,omitempty"`
	IsCommit             bool                `protobuf:"varint,5,opt,name=is_commit,json=isCommit,proto3" json:"is_commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NewValidBlockProto) Reset()         { *m = NewValidBlockProto{} }
func (m *NewValidBlockProto) String() string { return proto.CompactTextString(m) }
func (*NewValidBlockProto) ProtoMessage()    {}
func (*NewValidBlockProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{4}
}

func (m *NewValidBlockProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewValidBlockProto.Unmarshal(m, b)
}
func (m *NewValidBlockProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewValidBlockProto.Marshal(b, m, deterministic)
}
func (m *NewValidBlockProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewValidBlockProto.Merge(m, src)
}
func (m *NewValidBlockProto) XXX_Size() int {
	return xxx_messageInfo_NewValidBlockProto.Size(m)
}
func (m *NewValidBlockProto) XXX_DiscardUnknown() {
	xxx_messageInfo_NewValidBlockProto.DiscardUnknown(m)
}

var xxx_messageInfo_NewValidBlockProto proto.InternalMessageInfo

func (m *NewValidBlockProto) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *NewValidBlockProto) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *NewValidBlockProto) GetBlockPartSetHeader() *PartSetHeaderProto {
	if m != nil {
		return m.BlockPartSetHeader
	}
	return nil
}

func (m *NewValidBlockProto) GetBlockParts() *bits.BitArrayProto {
	if m != nil {
		return m.BlockParts
	}
	return nil
}

func (m *NewValidBlockProto) GetIsCommit() bool {
	if m != nil {
		return m.IsCommit
	}
	return false
}

type VoteSetMaj23Proto struct {
	Height               int64         `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round                int32         `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Type                 SignedMsgType `protobuf:"varint,3,opt,name=type,proto3,enum=tendermint.types.SignedMsgType" json:"type,omitempty"`
	BlockId              *BlockIDProto `protobuf:"bytes,4,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *VoteSetMaj23Proto) Reset()         { *m = VoteSetMaj23Proto{} }
func (m *VoteSetMaj23Proto) String() string { return proto.CompactTextString(m) }
func (*VoteSetMaj23Proto) ProtoMessage()    {}
func (*VoteSetMaj23Proto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{5}
}

func (m *VoteSetMaj23Proto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteSetMaj23Proto.Unmarshal(m, b)
}
func (m *VoteSetMaj23Proto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteSetMaj23Proto.Marshal(b, m, deterministic)
}
func (m *VoteSetMaj23Proto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteSetMaj23Proto.Merge(m, src)
}
func (m *VoteSetMaj23Proto) XXX_Size() int {
	return xxx_messageInfo_VoteSetMaj23Proto.Size(m)
}
func (m *VoteSetMaj23Proto) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteSetMaj23Proto.DiscardUnknown(m)
}

var xxx_messageInfo_VoteSetMaj23Proto proto.InternalMessageInfo

func (m *VoteSetMaj23Proto) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *VoteSetMaj23Proto) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *VoteSetMaj23Proto) GetType() SignedMsgType {
	if m != nil {
		return m.Type
	}
	return SignedMsgType_SIGNED_MSG_TYPE_UNKNOWN
}

func (m *VoteSetMaj23Proto) GetBlockId() *BlockIDProto {
	if m != nil {
		return m.BlockId
	}
	return nil
}

// CommitSig is a part of the Vote included in a Commit.
type CommitSigProto struct {
	BlockIdFlag          BlockIDFlagProto       `protobuf:"varint,1,opt,name=block_id_flag,json=blockIdFlag,proto3,enum=tendermint.types.BlockIDFlagProto" json:"block_id_flag,omitempty"`
	ValidatorAddress     []byte                 `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature            []byte                 `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CommitSigProto) Reset()         { *m = CommitSigProto{} }
func (m *CommitSigProto) String() string { return proto.CompactTextString(m) }
func (*CommitSigProto) ProtoMessage()    {}
func (*CommitSigProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{6}
}

func (m *CommitSigProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitSigProto.Unmarshal(m, b)
}
func (m *CommitSigProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitSigProto.Marshal(b, m, deterministic)
}
func (m *CommitSigProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitSigProto.Merge(m, src)
}
func (m *CommitSigProto) XXX_Size() int {
	return xxx_messageInfo_CommitSigProto.Size(m)
}
func (m *CommitSigProto) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitSigProto.DiscardUnknown(m)
}

var xxx_messageInfo_CommitSigProto proto.InternalMessageInfo

func (m *CommitSigProto) GetBlockIdFlag() BlockIDFlagProto {
	if m != nil {
		return m.BlockIdFlag
	}
	return BlockIDFlagProto_BLOCK_ID_FLAG_UNKNOWN
}

func (m *CommitSigProto) GetValidatorAddress() []byte {
	if m != nil {
		return m.ValidatorAddress
	}
	return nil
}

func (m *CommitSigProto) GetTimestamp() *timestamppb.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *CommitSigProto) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Commit contains the evidence that a block was committed by a set of validators.
type CommitProto struct {
	Height               int64             `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round                int32             `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	BlockId              *BlockIDProto     `protobuf:"bytes,3,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Signatures           []*CommitSigProto `protobuf:"bytes,4,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CommitProto) Reset()         { *m = CommitProto{} }
func (m *CommitProto) String() string { return proto.CompactTextString(m) }
func (*CommitProto) ProtoMessage()    {}
func (*CommitProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{7}
}

func (m *CommitProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitProto.Unmarshal(m, b)
}
func (m *CommitProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitProto.Marshal(b, m, deterministic)
}
func (m *CommitProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitProto.Merge(m, src)
}
func (m *CommitProto) XXX_Size() int {
	return xxx_messageInfo_CommitProto.Size(m)
}
func (m *CommitProto) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitProto.DiscardUnknown(m)
}

var xxx_messageInfo_CommitProto proto.InternalMessageInfo

func (m *CommitProto) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *CommitProto) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *CommitProto) GetBlockId() *BlockIDProto {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *CommitProto) GetSignatures() []*CommitSigProto {
	if m != nil {
		return m.Signatures
	}
	return nil
}

// NewRoundStep is sent for every step taken in the ConsensusState.
// For every height/round/step transition
type NewRoundStepProto struct {
	Height                int64    `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round                 int32    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Step                  uint32   `protobuf:"varint,3,opt,name=step,proto3" json:"step,omitempty"`
	SecondsSinceStartTime int64    `protobuf:"varint,4,opt,name=seconds_since_start_time,json=secondsSinceStartTime,proto3" json:"seconds_since_start_time,omitempty"`
	LastCommitRound       int32    `protobuf:"varint,5,opt,name=last_commit_round,json=lastCommitRound,proto3" json:"last_commit_round,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *NewRoundStepProto) Reset()         { *m = NewRoundStepProto{} }
func (m *NewRoundStepProto) String() string { return proto.CompactTextString(m) }
func (*NewRoundStepProto) ProtoMessage()    {}
func (*NewRoundStepProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{8}
}

func (m *NewRoundStepProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRoundStepProto.Unmarshal(m, b)
}
func (m *NewRoundStepProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRoundStepProto.Marshal(b, m, deterministic)
}
func (m *NewRoundStepProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRoundStepProto.Merge(m, src)
}
func (m *NewRoundStepProto) XXX_Size() int {
	return xxx_messageInfo_NewRoundStepProto.Size(m)
}
func (m *NewRoundStepProto) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRoundStepProto.DiscardUnknown(m)
}

var xxx_messageInfo_NewRoundStepProto proto.InternalMessageInfo

func (m *NewRoundStepProto) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *NewRoundStepProto) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *NewRoundStepProto) GetStep() uint32 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *NewRoundStepProto) GetSecondsSinceStartTime() int64 {
	if m != nil {
		return m.SecondsSinceStartTime
	}
	return 0
}

func (m *NewRoundStepProto) GetLastCommitRound() int32 {
	if m != nil {
		return m.LastCommitRound
	}
	return 0
}

// HasVote is sent to indicate that a particular vote has been received.
type HasVoteProto struct {
	Height               int64         `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round                int32         `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Type                 SignedMsgType `protobuf:"varint,3,opt,name=type,proto3,enum=tendermint.types.SignedMsgType" json:"type,omitempty"`
	Index                int32         `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *HasVoteProto) Reset()         { *m = HasVoteProto{} }
func (m *HasVoteProto) String() string { return proto.CompactTextString(m) }
func (*HasVoteProto) ProtoMessage()    {}
func (*HasVoteProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{9}
}

func (m *HasVoteProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasVoteProto.Unmarshal(m, b)
}
func (m *HasVoteProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasVoteProto.Marshal(b, m, deterministic)
}
func (m *HasVoteProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasVoteProto.Merge(m, src)
}
func (m *HasVoteProto) XXX_Size() int {
	return xxx_messageInfo_HasVoteProto.Size(m)
}
func (m *HasVoteProto) XXX_DiscardUnknown() {
	xxx_messageInfo_HasVoteProto.DiscardUnknown(m)
}

var xxx_messageInfo_HasVoteProto proto.InternalMessageInfo

func (m *HasVoteProto) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *HasVoteProto) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *HasVoteProto) GetType() SignedMsgType {
	if m != nil {
		return m.Type
	}
	return SignedMsgType_SIGNED_MSG_TYPE_UNKNOWN
}

func (m *HasVoteProto) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

// Data contains the set of transactions included in the block
type TendermintBlockDataProto struct {
	// Txs that will be applied by state @ block.Height+1.
	// NOTE: not all txs here are valid.  We're just agreeing on the order first.
	// This means that block.AppHash does not include these txs.
	Txs                  [][]byte `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TendermintBlockDataProto) Reset()         { *m = TendermintBlockDataProto{} }
func (m *TendermintBlockDataProto) String() string { return proto.CompactTextString(m) }
func (*TendermintBlockDataProto) ProtoMessage()    {}
func (*TendermintBlockDataProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{10}
}

func (m *TendermintBlockDataProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TendermintBlockDataProto.Unmarshal(m, b)
}
func (m *TendermintBlockDataProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TendermintBlockDataProto.Marshal(b, m, deterministic)
}
func (m *TendermintBlockDataProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TendermintBlockDataProto.Merge(m, src)
}
func (m *TendermintBlockDataProto) XXX_Size() int {
	return xxx_messageInfo_TendermintBlockDataProto.Size(m)
}
func (m *TendermintBlockDataProto) XXX_DiscardUnknown() {
	xxx_messageInfo_TendermintBlockDataProto.DiscardUnknown(m)
}

var xxx_messageInfo_TendermintBlockDataProto proto.InternalMessageInfo

func (m *TendermintBlockDataProto) GetTxs() [][]byte {
	if m != nil {
		return m.Txs
	}
	return nil
}

// Header defines the structure of a Tendermint block header.
type TendermintBlockHeaderProto struct {
	// basic block info
	//  tendermint.version.Consensus version  = 1 [(gogoproto.nullable) = false];
	ChainId string                 `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Height  int64                  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Time    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	// prev block info
	LastBlockId *BlockIDProto `protobuf:"bytes,5,opt,name=last_block_id,json=lastBlockId,proto3" json:"last_block_id,omitempty"`
	// hashes of block data
	LastCommitHash []byte `protobuf:"bytes,6,opt,name=last_commit_hash,json=lastCommitHash,proto3" json:"last_commit_hash,omitempty"`
	DataHash       []byte `protobuf:"bytes,7,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	// hashes from the app output from the prev block
	ValidatorsHash     []byte `protobuf:"bytes,8,opt,name=validators_hash,json=validatorsHash,proto3" json:"validators_hash,omitempty"`
	NextValidatorsHash []byte `protobuf:"bytes,9,opt,name=next_validators_hash,json=nextValidatorsHash,proto3" json:"next_validators_hash,omitempty"`
	ConsensusHash      []byte `protobuf:"bytes,10,opt,name=consensus_hash,json=consensusHash,proto3" json:"consensus_hash,omitempty"`
	AppHash            []byte `protobuf:"bytes,11,opt,name=app_hash,json=appHash,proto3" json:"app_hash,omitempty"`
	LastResultsHash    []byte `protobuf:"bytes,12,opt,name=last_results_hash,json=lastResultsHash,proto3" json:"last_results_hash,omitempty"`
	// consensus info
	EvidenceHash         []byte   `protobuf:"bytes,13,opt,name=evidence_hash,json=evidenceHash,proto3" json:"evidence_hash,omitempty"`
	ProposerAddress      []byte   `protobuf:"bytes,14,opt,name=proposer_address,json=proposerAddress,proto3" json:"proposer_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TendermintBlockHeaderProto) Reset()         { *m = TendermintBlockHeaderProto{} }
func (m *TendermintBlockHeaderProto) String() string { return proto.CompactTextString(m) }
func (*TendermintBlockHeaderProto) ProtoMessage()    {}
func (*TendermintBlockHeaderProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{11}
}

func (m *TendermintBlockHeaderProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TendermintBlockHeaderProto.Unmarshal(m, b)
}
func (m *TendermintBlockHeaderProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TendermintBlockHeaderProto.Marshal(b, m, deterministic)
}
func (m *TendermintBlockHeaderProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TendermintBlockHeaderProto.Merge(m, src)
}
func (m *TendermintBlockHeaderProto) XXX_Size() int {
	return xxx_messageInfo_TendermintBlockHeaderProto.Size(m)
}
func (m *TendermintBlockHeaderProto) XXX_DiscardUnknown() {
	xxx_messageInfo_TendermintBlockHeaderProto.DiscardUnknown(m)
}

var xxx_messageInfo_TendermintBlockHeaderProto proto.InternalMessageInfo

func (m *TendermintBlockHeaderProto) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *TendermintBlockHeaderProto) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TendermintBlockHeaderProto) GetTime() *timestamppb.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *TendermintBlockHeaderProto) GetLastBlockId() *BlockIDProto {
	if m != nil {
		return m.LastBlockId
	}
	return nil
}

func (m *TendermintBlockHeaderProto) GetLastCommitHash() []byte {
	if m != nil {
		return m.LastCommitHash
	}
	return nil
}

func (m *TendermintBlockHeaderProto) GetDataHash() []byte {
	if m != nil {
		return m.DataHash
	}
	return nil
}

func (m *TendermintBlockHeaderProto) GetValidatorsHash() []byte {
	if m != nil {
		return m.ValidatorsHash
	}
	return nil
}

func (m *TendermintBlockHeaderProto) GetNextValidatorsHash() []byte {
	if m != nil {
		return m.NextValidatorsHash
	}
	return nil
}

func (m *TendermintBlockHeaderProto) GetConsensusHash() []byte {
	if m != nil {
		return m.ConsensusHash
	}
	return nil
}

func (m *TendermintBlockHeaderProto) GetAppHash() []byte {
	if m != nil {
		return m.AppHash
	}
	return nil
}

func (m *TendermintBlockHeaderProto) GetLastResultsHash() []byte {
	if m != nil {
		return m.LastResultsHash
	}
	return nil
}

func (m *TendermintBlockHeaderProto) GetEvidenceHash() []byte {
	if m != nil {
		return m.EvidenceHash
	}
	return nil
}

func (m *TendermintBlockHeaderProto) GetProposerAddress() []byte {
	if m != nil {
		return m.ProposerAddress
	}
	return nil
}

type ProposalProto struct {
	Type                 SignedMsgType          `protobuf:"varint,1,opt,name=type,proto3,enum=tendermint.types.SignedMsgType" json:"type,omitempty"`
	Height               int64                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Round                int32                  `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	PolRound             int32                  `protobuf:"varint,4,opt,name=pol_round,json=polRound,proto3" json:"pol_round,omitempty"`
	BlockId              *BlockIDProto          `protobuf:"bytes,5,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature            []byte                 `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ProposalProto) Reset()         { *m = ProposalProto{} }
func (m *ProposalProto) String() string { return proto.CompactTextString(m) }
func (*ProposalProto) ProtoMessage()    {}
func (*ProposalProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{12}
}

func (m *ProposalProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposalProto.Unmarshal(m, b)
}
func (m *ProposalProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposalProto.Marshal(b, m, deterministic)
}
func (m *ProposalProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalProto.Merge(m, src)
}
func (m *ProposalProto) XXX_Size() int {
	return xxx_messageInfo_ProposalProto.Size(m)
}
func (m *ProposalProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalProto.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalProto proto.InternalMessageInfo

func (m *ProposalProto) GetType() SignedMsgType {
	if m != nil {
		return m.Type
	}
	return SignedMsgType_SIGNED_MSG_TYPE_UNKNOWN
}

func (m *ProposalProto) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ProposalProto) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *ProposalProto) GetPolRound() int32 {
	if m != nil {
		return m.PolRound
	}
	return 0
}

func (m *ProposalProto) GetBlockId() *BlockIDProto {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *ProposalProto) GetTimestamp() *timestamppb.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *ProposalProto) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type BlockMetaProto struct {
	BlockId              *BlockIDProto               `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	BlockSize            int64                       `protobuf:"varint,2,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	Header               *TendermintBlockHeaderProto `protobuf:"bytes,3,opt,name=header,proto3" json:"header,omitempty"`
	NumTxs               int64                       `protobuf:"varint,4,opt,name=num_txs,json=numTxs,proto3" json:"num_txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *BlockMetaProto) Reset()         { *m = BlockMetaProto{} }
func (m *BlockMetaProto) String() string { return proto.CompactTextString(m) }
func (*BlockMetaProto) ProtoMessage()    {}
func (*BlockMetaProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{13}
}

func (m *BlockMetaProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockMetaProto.Unmarshal(m, b)
}
func (m *BlockMetaProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockMetaProto.Marshal(b, m, deterministic)
}
func (m *BlockMetaProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockMetaProto.Merge(m, src)
}
func (m *BlockMetaProto) XXX_Size() int {
	return xxx_messageInfo_BlockMetaProto.Size(m)
}
func (m *BlockMetaProto) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockMetaProto.DiscardUnknown(m)
}

var xxx_messageInfo_BlockMetaProto proto.InternalMessageInfo

func (m *BlockMetaProto) GetBlockId() *BlockIDProto {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *BlockMetaProto) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *BlockMetaProto) GetHeader() *TendermintBlockHeaderProto {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BlockMetaProto) GetNumTxs() int64 {
	if m != nil {
		return m.NumTxs
	}
	return 0
}

type SignedHeaderProto struct {
	Header               *TendermintBlockHeaderProto `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Commit               *CommitProto                `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SignedHeaderProto) Reset()         { *m = SignedHeaderProto{} }
func (m *SignedHeaderProto) String() string { return proto.CompactTextString(m) }
func (*SignedHeaderProto) ProtoMessage()    {}
func (*SignedHeaderProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{14}
}

func (m *SignedHeaderProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedHeaderProto.Unmarshal(m, b)
}
func (m *SignedHeaderProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedHeaderProto.Marshal(b, m, deterministic)
}
func (m *SignedHeaderProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedHeaderProto.Merge(m, src)
}
func (m *SignedHeaderProto) XXX_Size() int {
	return xxx_messageInfo_SignedHeaderProto.Size(m)
}
func (m *SignedHeaderProto) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedHeaderProto.DiscardUnknown(m)
}

var xxx_messageInfo_SignedHeaderProto proto.InternalMessageInfo

func (m *SignedHeaderProto) GetHeader() *TendermintBlockHeaderProto {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SignedHeaderProto) GetCommit() *CommitProto {
	if m != nil {
		return m.Commit
	}
	return nil
}

type LightBlockProto struct {
	SignedHeader         *SignedHeaderProto `protobuf:"bytes,1,opt,name=signed_header,json=signedHeader,proto3" json:"signed_header,omitempty"`
	ValidatorSet         *ValidatorSetProto `protobuf:"bytes,2,opt,name=validator_set,json=validatorSet,proto3" json:"validator_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LightBlockProto) Reset()         { *m = LightBlockProto{} }
func (m *LightBlockProto) String() string { return proto.CompactTextString(m) }
func (*LightBlockProto) ProtoMessage()    {}
func (*LightBlockProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{15}
}

func (m *LightBlockProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LightBlockProto.Unmarshal(m, b)
}
func (m *LightBlockProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LightBlockProto.Marshal(b, m, deterministic)
}
func (m *LightBlockProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LightBlockProto.Merge(m, src)
}
func (m *LightBlockProto) XXX_Size() int {
	return xxx_messageInfo_LightBlockProto.Size(m)
}
func (m *LightBlockProto) XXX_DiscardUnknown() {
	xxx_messageInfo_LightBlockProto.DiscardUnknown(m)
}

var xxx_messageInfo_LightBlockProto proto.InternalMessageInfo

func (m *LightBlockProto) GetSignedHeader() *SignedHeaderProto {
	if m != nil {
		return m.SignedHeader
	}
	return nil
}

func (m *LightBlockProto) GetValidatorSet() *ValidatorSetProto {
	if m != nil {
		return m.ValidatorSet
	}
	return nil
}

// TxProof represents a Merkle proof of the presence of a transaction in the Merkle tree.
type TxProofProto struct {
	RootHash             []byte             `protobuf:"bytes,1,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	Data                 []byte             `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Proof                *crypto.ProofProto `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TxProofProto) Reset()         { *m = TxProofProto{} }
func (m *TxProofProto) String() string { return proto.CompactTextString(m) }
func (*TxProofProto) ProtoMessage()    {}
func (*TxProofProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{16}
}

func (m *TxProofProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxProofProto.Unmarshal(m, b)
}
func (m *TxProofProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxProofProto.Marshal(b, m, deterministic)
}
func (m *TxProofProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxProofProto.Merge(m, src)
}
func (m *TxProofProto) XXX_Size() int {
	return xxx_messageInfo_TxProofProto.Size(m)
}
func (m *TxProofProto) XXX_DiscardUnknown() {
	xxx_messageInfo_TxProofProto.DiscardUnknown(m)
}

var xxx_messageInfo_TxProofProto proto.InternalMessageInfo

func (m *TxProofProto) GetRootHash() []byte {
	if m != nil {
		return m.RootHash
	}
	return nil
}

func (m *TxProofProto) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TxProofProto) GetProof() *crypto.ProofProto {
	if m != nil {
		return m.Proof
	}
	return nil
}

func init() {
	proto.RegisterEnum("tendermint.types.SignedMsgType", SignedMsgType_name, SignedMsgType_value)
	proto.RegisterEnum("tendermint.types.BlockIDFlagProto", BlockIDFlagProto_name, BlockIDFlagProto_value)
	proto.RegisterType((*PartSetHeaderProto)(nil), "tendermint.types.PartSetHeaderProto")
	proto.RegisterType((*PartProto)(nil), "tendermint.types.PartProto")
	proto.RegisterType((*BlockIDProto)(nil), "tendermint.types.BlockIDProto")
	proto.RegisterType((*VoteProto)(nil), "tendermint.types.VoteProto")
	proto.RegisterType((*NewValidBlockProto)(nil), "tendermint.types.NewValidBlockProto")
	proto.RegisterType((*VoteSetMaj23Proto)(nil), "tendermint.types.VoteSetMaj23Proto")
	proto.RegisterType((*CommitSigProto)(nil), "tendermint.types.CommitSigProto")
	proto.RegisterType((*CommitProto)(nil), "tendermint.types.CommitProto")
	proto.RegisterType((*NewRoundStepProto)(nil), "tendermint.types.NewRoundStepProto")
	proto.RegisterType((*HasVoteProto)(nil), "tendermint.types.HasVoteProto")
	proto.RegisterType((*TendermintBlockDataProto)(nil), "tendermint.types.TendermintBlockDataProto")
	proto.RegisterType((*TendermintBlockHeaderProto)(nil), "tendermint.types.TendermintBlockHeaderProto")
	proto.RegisterType((*ProposalProto)(nil), "tendermint.types.ProposalProto")
	proto.RegisterType((*BlockMetaProto)(nil), "tendermint.types.BlockMetaProto")
	proto.RegisterType((*SignedHeaderProto)(nil), "tendermint.types.SignedHeaderProto")
	proto.RegisterType((*LightBlockProto)(nil), "tendermint.types.LightBlockProto")
	proto.RegisterType((*TxProofProto)(nil), "tendermint.types.TxProofProto")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_d938547f84707355) }

var fileDescriptor_d938547f84707355 = []byte{
	// 1510 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0x5d, 0x6f, 0x1b, 0x45,
	0x17, 0xee, 0xda, 0x4e, 0x62, 0x1f, 0x7f, 0xc4, 0x1e, 0x25, 0xad, 0xeb, 0xbe, 0x6d, 0xac, 0xed,
	0xfb, 0xbe, 0xa4, 0xa5, 0xd8, 0x25, 0x11, 0x02, 0x24, 0x54, 0x29, 0xce, 0x47, 0x63, 0x9a, 0x38,
	0xd6, 0xda, 0x0d, 0x02, 0x09, 0xad, 0xd6, 0xde, 0x89, 0xbd, 0xd4, 0xde, 0x5d, 0xed, 0x8c, 0xd3,
	0xa4, 0xd7, 0x48, 0xa0, 0x5c, 0xf5, 0x0f, 0xe4, 0x0a, 0x90, 0xf8, 0x0d, 0x48, 0x48, 0x88, 0x2b,
	0xee, 0xb8, 0xe4, 0x06, 0x15, 0xc4, 0x0d, 0xf7, 0xfc, 0x02, 0x34, 0x67, 0xd6, 0xeb, 0xb5, 0x9d,
	0x48, 0x4d, 0x5a, 0xf5, 0x2a, 0x9e, 0x33, 0xcf, 0xf9, 0x9c, 0xe7, 0x9c, 0x99, 0x0d, 0x24, 0xf9,
	0xb1, 0x4b, 0x59, 0xc9, 0xf5, 0x1c, 0xee, 0x90, 0x2c, 0xa7, 0xb6, 0x49, 0xbd, 0xbe, 0x65, 0xf3,
	0x12, 0xca, 0x0b, 0x0b, 0x1d, 0xa7, 0xe3, 0xe0, 0x66, 0x59, 0xfc, 0x92, 0xb8, 0x42, 0xb5, 0x63,
	0xf1, 0xee, 0xa0, 0x55, 0x6a, 0x3b, 0xfd, 0x72, 0xf7, 0xd8, 0xa5, 0x5e, 0x8f, 0x9a, 0x1d, 0xea,
	0x95, 0x0f, 0x8c, 0x96, 0x67, 0xb5, 0xdf, 0x31, 0x3d, 0xc7, 0xed, 0x59, 0xad, 0x32, 0x82, 0x99,
	0xfc, 0xd3, 0x1a, 0x1c, 0xb0, 0x72, 0xdb, 0x3b, 0x76, 0xb9, 0x23, 0x04, 0xce, 0x81, 0x6f, 0x6a,
	0xa9, 0xe3, 0x38, 0x9d, 0x1e, 0x0d, 0x40, 0x65, 0x6e, 0xf5, 0x29, 0xe3, 0x46, 0xdf, 0xf5, 0x01,
	0x3b, 0x97, 0xf4, 0x85, 0xf1, 0x97, 0x0f, 0x8d, 0x9e, 0x65, 0x1a, 0xdc, 0xf1, 0x7c, 0x6b, 0x95,
	0x0b, 0x59, 0xeb, 0x59, 0x2d, 0x56, 0x6e, 0x59, 0xdc, 0xb7, 0x26, 0x6d, 0xa8, 0x0f, 0x80, 0xd4,
	0x0d, 0x8f, 0x37, 0x28, 0xdf, 0xa6, 0x86, 0x49, 0xbd, 0x3a, 0xd6, 0x6e, 0x01, 0x66, 0xb8, 0xc3,
	0x8d, 0x5e, 0x5e, 0x29, 0x2a, 0xcb, 0x69, 0x4d, 0x2e, 0x08, 0x81, 0x58, 0xd7, 0x60, 0xdd, 0x7c,
	0xa4, 0xa8, 0x2c, 0xa7, 0x34, 0xfc, 0xad, 0x7a, 0x90, 0x10, 0xfa, 0x81, 0x9a, 0x65, 0x9b, 0xf4,
	0x68, 0xa8, 0x86, 0x0b, 0x21, 0x6d, 0x1d, 0x73, 0xca, 0x7c, 0x3d, 0xb9, 0x20, 0x1f, 0xc2, 0x0c,
	0x96, 0x2e, 0x1f, 0x2d, 0x2a, 0xcb, 0xc9, 0x95, 0x9b, 0xa5, 0xd0, 0x71, 0xc9, 0xd2, 0x96, 0xea,
	0x62, 0x1f, 0x2d, 0x57, 0x62, 0xbf, 0xbc, 0x58, 0xba, 0xa2, 0x49, 0x0d, 0xf5, 0x10, 0x52, 0x95,
	0x9e, 0xd3, 0x7e, 0x52, 0xdd, 0x90, 0x6e, 0x87, 0x71, 0x29, 0xa3, 0xb8, 0x88, 0x06, 0xf3, 0xae,
	0xe1, 0x71, 0x9d, 0x51, 0xae, 0x77, 0x31, 0x33, 0x74, 0x9f, 0x5c, 0xf9, 0x6f, 0x69, 0x92, 0x17,
	0xa5, 0xe9, 0x02, 0xf8, 0xfe, 0xd2, 0x6e, 0x78, 0x47, 0xfd, 0x27, 0x02, 0x89, 0x7d, 0x87, 0x53,
	0xe9, 0x75, 0x15, 0x62, 0x42, 0x1d, 0xbd, 0x66, 0x56, 0x96, 0xa6, 0xcd, 0x36, 0xac, 0x8e, 0x4d,
	0xcd, 0x5d, 0xd6, 0x69, 0x1e, 0xbb, 0x54, 0x43, 0x30, 0xb9, 0x0a, 0xb3, 0x5d, 0x6a, 0x75, 0xba,
	0x1c, 0xa3, 0x89, 0x6a, 0xfe, 0x4a, 0xd4, 0xc8, 0x73, 0x06, 0xb6, 0x89, 0xd5, 0x98, 0xd1, 0xe4,
	0x82, 0x7c, 0x0c, 0xf1, 0x96, 0x48, 0x54, 0xb7, 0xcc, 0x7c, 0x0c, 0xa3, 0xbf, 0x35, 0xed, 0x26,
	0x5c, 0x8a, 0xca, 0xbc, 0x88, 0xfb, 0xaf, 0x17, 0x4b, 0x73, 0xbe, 0x54, 0x9b, 0x43, 0x03, 0x55,
	0x93, 0x54, 0x20, 0x11, 0xb0, 0x31, 0x3f, 0x83, 0xc6, 0x0a, 0x25, 0xc9, 0xd7, 0xd2, 0x90, 0x68,
	0xa5, 0xe6, 0x10, 0x51, 0x89, 0x0b, 0x43, 0xcf, 0xff, 0x58, 0x52, 0xb4, 0x91, 0x1a, 0x79, 0x1b,
	0x72, 0x01, 0x07, 0x75, 0xc3, 0x34, 0x3d, 0xca, 0x58, 0x7e, 0x16, 0xab, 0x9e, 0x0d, 0x36, 0xd6,
	0xa4, 0x9c, 0xbc, 0x05, 0xf3, 0x23, 0xb0, 0xa4, 0xc5, 0x1c, 0x26, 0x97, 0x09, 0xc4, 0x55, 0xe4,
	0xc7, 0x7f, 0x20, 0xc1, 0xac, 0x8e, 0x6d, 0xf0, 0x81, 0x47, 0xf3, 0x71, 0xb4, 0x36, 0x12, 0xa8,
	0x5f, 0x46, 0x80, 0xd4, 0xe8, 0xd3, 0x7d, 0xa1, 0x83, 0x49, 0xc9, 0xea, 0x8f, 0x0a, 0xa9, 0x9c,
	0x5d, 0xc8, 0x48, 0xb8, 0x90, 0x9f, 0xc3, 0xa2, 0x2c, 0xe4, 0x24, 0x27, 0xa2, 0x17, 0xe6, 0x04,
	0x41, 0x43, 0x63, 0xdb, 0x64, 0x03, 0x92, 0x23, 0xf3, 0xcc, 0x3f, 0xaa, 0xdb, 0x61, 0xa3, 0xa2,
	0xf9, 0x4a, 0xa2, 0xf9, 0x4a, 0x15, 0x8b, 0xaf, 0x79, 0x9e, 0x71, 0x8c, 0x36, 0x35, 0x08, 0xac,
	0x31, 0x72, 0x03, 0x12, 0x16, 0xd3, 0xdb, 0x4e, 0xbf, 0x6f, 0x71, 0x3c, 0xa1, 0xb8, 0x16, 0xb7,
	0xd8, 0x3a, 0xae, 0xd5, 0x9f, 0x15, 0xc8, 0x09, 0xee, 0x35, 0x28, 0xdf, 0x35, 0xbe, 0x58, 0x59,
	0xbd, 0x4c, 0x15, 0x86, 0x8c, 0x8d, 0x5e, 0x84, 0xb1, 0xaf, 0x91, 0x83, 0xea, 0xdf, 0x0a, 0x64,
	0x64, 0x3e, 0x0d, 0xab, 0x23, 0x33, 0xd8, 0x82, 0xf4, 0xd0, 0xbc, 0x7e, 0xd0, 0x33, 0x3a, 0x7e,
	0x3b, 0xa9, 0xe7, 0xfa, 0xd8, 0xea, 0x19, 0x52, 0x55, 0x4b, 0xfa, 0x66, 0x85, 0xe4, 0x6c, 0x6a,
	0x46, 0xce, 0xa1, 0xe6, 0x58, 0x2f, 0x44, 0x2f, 0xd7, 0x0b, 0x63, 0xac, 0x8d, 0x4d, 0xb2, 0xf6,
	0x57, 0x05, 0x92, 0x32, 0xd3, 0xcb, 0x1c, 0x54, 0xb8, 0xe6, 0xd1, 0x57, 0xec, 0xfb, 0x2d, 0x80,
	0x20, 0x2c, 0x41, 0xcd, 0xe8, 0x72, 0x72, 0xa5, 0x38, 0x6d, 0x6d, 0xfc, 0x58, 0x7c, 0xae, 0x87,
	0x34, 0xd5, 0x1f, 0x14, 0xc8, 0xd5, 0xe8, 0x53, 0x4d, 0x04, 0xd8, 0xe0, 0xd4, 0xbd, 0x4c, 0x5e,
	0x04, 0x62, 0x8c, 0x53, 0x59, 0xf2, 0xb4, 0x86, 0xbf, 0xc9, 0xfb, 0x90, 0x67, 0xb4, 0xed, 0xd8,
	0x26, 0xd3, 0x99, 0x65, 0xb7, 0xa9, 0xce, 0xb8, 0xe8, 0x51, 0x51, 0x68, 0x2c, 0x6b, 0x54, 0x5b,
	0xf4, 0xf7, 0x1b, 0x62, 0xbb, 0x21, 0x76, 0xc5, 0xd1, 0x90, 0xbb, 0x90, 0xeb, 0x19, 0x8c, 0xfb,
	0x0d, 0xa3, 0x4b, 0x77, 0x33, 0xe8, 0x6e, 0x5e, 0x6c, 0xc8, 0x8c, 0x30, 0x5e, 0xf5, 0x2b, 0x05,
	0x52, 0xdb, 0x06, 0x1b, 0x0d, 0xef, 0x37, 0xd0, 0x38, 0xc1, 0x65, 0x18, 0x93, 0xa6, 0x70, 0xa1,
	0xde, 0x83, 0x7c, 0x33, 0xd0, 0xc6, 0xc3, 0xda, 0x30, 0xb8, 0x21, 0x83, 0xca, 0x42, 0x94, 0x1f,
	0xb1, 0xbc, 0x52, 0x8c, 0x2e, 0xa7, 0x34, 0xf1, 0x53, 0xfd, 0x29, 0x06, 0x85, 0x09, 0x78, 0xf8,
	0x9a, 0xfe, 0x3f, 0xc4, 0xdb, 0x5d, 0xc3, 0xb2, 0x05, 0x4f, 0x44, 0xc0, 0x89, 0x4a, 0x52, 0x70,
	0x60, 0x5d, 0xc8, 0x04, 0x07, 0x70, 0xb3, 0x6a, 0x86, 0xb2, 0x8d, 0x8e, 0x65, 0xfb, 0x01, 0xc4,
	0x82, 0x3a, 0xbf, 0x6c, 0x0b, 0xa0, 0x06, 0xd9, 0x86, 0x34, 0x16, 0x3f, 0xa0, 0xe9, 0xcc, 0x4b,
	0xd1, 0x54, 0xd2, 0x2a, 0x29, 0x54, 0x2b, 0x3e, 0x3f, 0x97, 0x21, 0x1b, 0x3e, 0x46, 0xbc, 0xc8,
	0xe5, 0x95, 0x92, 0x19, 0x9d, 0xe2, 0xb6, 0xb8, 0xd2, 0x6f, 0x40, 0xc2, 0x34, 0xb8, 0x21, 0x21,
	0x73, 0x08, 0x89, 0x0b, 0x01, 0x6e, 0x86, 0x6f, 0x1b, 0x26, 0x21, 0xf2, 0x2a, 0x19, 0xdd, 0x36,
	0x0c, 0x81, 0xf7, 0x61, 0xc1, 0xa6, 0x47, 0x5c, 0x9f, 0x44, 0x27, 0x10, 0x4d, 0xc4, 0xde, 0xfe,
	0xb8, 0xc6, 0xff, 0x20, 0xd3, 0x76, 0x6c, 0x46, 0x6d, 0x36, 0xf0, 0xb1, 0x80, 0xd8, 0x74, 0x20,
	0x45, 0xd8, 0x75, 0x88, 0x1b, 0xae, 0x2b, 0x01, 0x49, 0x04, 0xcc, 0x19, 0xae, 0x8b, 0x5b, 0x43,
	0xaa, 0x7a, 0x94, 0x0d, 0x7a, 0xdc, 0x37, 0x92, 0x42, 0x0c, 0x52, 0x55, 0x93, 0x72, 0xc4, 0xde,
	0x86, 0x34, 0x3d, 0xb4, 0x4c, 0x2a, 0x5a, 0x01, 0x71, 0x69, 0xc4, 0xa5, 0x86, 0x42, 0x04, 0xdd,
	0x81, 0xac, 0xeb, 0x39, 0xae, 0xc3, 0xe8, 0x68, 0xd8, 0x65, 0xa4, 0xbd, 0xa1, 0xdc, 0x9f, 0x75,
	0xea, 0x8f, 0x11, 0x48, 0xd7, 0x51, 0x66, 0xf4, 0xde, 0xd8, 0xc3, 0xe5, 0x06, 0x24, 0x5c, 0xa7,
	0xe7, 0xf7, 0xa4, 0xe4, 0x7f, 0xdc, 0x75, 0x7a, 0xda, 0xd4, 0x74, 0x9b, 0x79, 0x9d, 0xaf, 0x9a,
	0xd9, 0xd7, 0x30, 0xc9, 0xe7, 0x26, 0x27, 0xf9, 0x9f, 0x0a, 0x64, 0xd0, 0xed, 0x2e, 0x1d, 0xf6,
	0x69, 0x38, 0x01, 0xe5, 0x15, 0x13, 0xb8, 0x09, 0xf2, 0x09, 0xa0, 0x33, 0xeb, 0x19, 0xf5, 0x6b,
	0x9b, 0x40, 0x49, 0xc3, 0x7a, 0x26, 0x6e, 0xdf, 0xd9, 0xb1, 0x97, 0xca, 0xbd, 0x69, 0x47, 0xe7,
	0xcf, 0x07, 0xbf, 0xdd, 0x7c, 0x0b, 0xe4, 0x1a, 0xcc, 0xd9, 0x83, 0xbe, 0x2e, 0x46, 0x8c, 0x1c,
	0xac, 0xb3, 0xf6, 0xa0, 0xdf, 0x3c, 0x62, 0xea, 0x73, 0x05, 0x72, 0xf2, 0xcc, 0xc3, 0xc3, 0x65,
	0x23, 0x70, 0xad, 0x5c, 0xdc, 0x75, 0xe0, 0xf4, 0x3d, 0x98, 0xf5, 0x5f, 0x34, 0x91, 0xe9, 0x77,
	0x7e, 0xf8, 0xea, 0xf1, 0xd5, 0x24, 0x58, 0xfd, 0x4e, 0x81, 0xf9, 0x1d, 0x41, 0xb0, 0xd0, 0x93,
	0x6f, 0x1b, 0xd2, 0x0c, 0xa3, 0xd4, 0xc7, 0xe2, 0xba, 0x7d, 0x1e, 0x81, 0xc3, 0xe1, 0xa4, 0x58,
	0x48, 0x24, 0x2c, 0x8d, 0x1e, 0x0b, 0x8c, 0x0e, 0x63, 0x3b, 0xc3, 0x52, 0x30, 0x0a, 0x1a, 0xd4,
	0x8f, 0x30, 0x75, 0x18, 0x12, 0xa9, 0x1c, 0x52, 0xcd, 0xa3, 0xd1, 0x77, 0x8a, 0x20, 0xbe, 0xe7,
	0x38, 0xfe, 0x18, 0x93, 0xdf, 0x23, 0x71, 0x21, 0xc0, 0xae, 0x25, 0x10, 0x13, 0xf3, 0x6a, 0xf8,
	0xfd, 0x24, 0x7e, 0x93, 0xd5, 0x8b, 0x7c, 0x06, 0xf9, 0x1f, 0x40, 0x77, 0x7f, 0x53, 0x20, 0x3d,
	0xd6, 0xa4, 0xe4, 0x1e, 0x5c, 0x6b, 0x54, 0x1f, 0xd6, 0x36, 0x37, 0xf4, 0xdd, 0xc6, 0x43, 0xbd,
	0xf9, 0x69, 0x7d, 0x53, 0x7f, 0x5c, 0x7b, 0x54, 0xdb, 0xfb, 0xa4, 0x96, 0xbd, 0x52, 0x98, 0x3f,
	0x39, 0x2d, 0x26, 0x1f, 0xdb, 0x4f, 0x6c, 0xe7, 0xa9, 0x7d, 0x1e, 0xba, 0xae, 0x6d, 0xee, 0xef,
	0x35, 0x37, 0xb3, 0x8a, 0x44, 0xd7, 0x3d, 0x7a, 0xe8, 0x70, 0x8a, 0xe8, 0xfb, 0x70, 0xfd, 0x0c,
	0xf4, 0xfa, 0xde, 0xee, 0x6e, 0xb5, 0x99, 0x8d, 0x14, 0x72, 0x27, 0xa7, 0xc5, 0x74, 0xdd, 0xa3,
	0xf2, 0xe4, 0x50, 0xa3, 0x04, 0xf9, 0x69, 0x8d, 0xbd, 0xfa, 0x5e, 0x63, 0x6d, 0x27, 0x5b, 0x2c,
	0x64, 0x4f, 0x4e, 0x8b, 0xa9, 0xe1, 0x48, 0x12, 0xf8, 0x42, 0xfc, 0xeb, 0x6f, 0x6e, 0x5d, 0xf9,
	0xfe, 0xdb, 0x5b, 0xca, 0xdd, 0xdf, 0x15, 0xc8, 0x4e, 0x3e, 0xf4, 0xc8, 0xbb, 0xb0, 0x58, 0xd9,
	0xd9, 0x5b, 0x7f, 0xa4, 0x57, 0x37, 0xf4, 0xad, 0x9d, 0xb5, 0x87, 0xa1, 0xd4, 0xae, 0x9e, 0x9c,
	0x16, 0x49, 0x48, 0xc1, 0xcf, 0x92, 0x94, 0x61, 0x61, 0x5c, 0x65, 0xad, 0xd2, 0xd8, 0xac, 0x35,
	0xb3, 0x4a, 0x61, 0xf1, 0xe4, 0xb4, 0x98, 0x0b, 0x69, 0xac, 0xb5, 0x18, 0xb5, 0xf9, 0xb4, 0x42,
	0x90, 0xdf, 0xa4, 0x82, 0xa4, 0x2b, 0xb9, 0x03, 0xb9, 0x71, 0x85, 0x5a, 0x75, 0x27, 0x1b, 0x2d,
	0x90, 0x93, 0xd3, 0x62, 0x26, 0x84, 0xae, 0x59, 0xbd, 0x51, 0x7a, 0x95, 0x07, 0x9f, 0x7d, 0xf4,
	0x2a, 0xff, 0x01, 0x68, 0xcd, 0xa2, 0x60, 0xf5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7d, 0xd6,
	0x10, 0x2e, 0xe9, 0x10, 0x00, 0x00,
}
